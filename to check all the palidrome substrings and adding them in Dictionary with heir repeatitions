/*

Finding all substring of given string and checking if substring is palindrome

Adding them in Dictionary to check which palindrome repeats how many times

Language used: c#

*/

using System;
using System.Collections;
using System.Collections.Generic;

// To execute C#, please define "static void Main" on a class
// named Solution.

class Solution
{
    
    
    public static bool isPalindrome(string stringToCheck){
    
        char [] strArray = stringToCheck.ToCharArray();
        Array.Reverse(strArray);
        string reverseString = "";
        for(int i = 0 ; i < strArray.Length ; i++){
            reverseString = reverseString + strArray[i];            
        }
        if(stringToCheck.Equals(reverseString)){
            return true;
        }
        else{ return false;}
        
    }
    
    static void Main(string[] args)
    {
        string str = "1234567890";
        //Console.WriteLine(str.Substring(0,2));
        
        Dictionary<string,int> palindromes = new Dictionary<string,int>();
        int totalPalindromes = 0;
        
        int jLimit = str.Length;
        for (int i =0; i < str.Length ; i++){
            
            for(int j = 0 ; j <= str.Length-i; j++){
             
                //Console.WriteLine(str.Substring(i,j));
                string stringToCheck = str.Substring(i,j);
                if (stringToCheck != "" && isPalindrome(stringToCheck)){
                
                    if(palindromes.ContainsKey(stringToCheck)){
                        int repeat = palindromes[stringToCheck];
                        palindromes[stringToCheck] = repeat+1;
                    }
                    else{
                        palindromes.Add(stringToCheck,1);
                    }
                }      
                
            }                        
        }
        
        
        foreach(KeyValuePair<string,int> pair in palindromes){
            Console.WriteLine(pair.Key.ToString() + " " + pair.Value.ToString()  );
        }
        
        foreach(KeyValuePair<string,int> pair in palindromes){
            totalPalindromes++;            
        }
        
        Console.WriteLine("totalPalindromes: " +totalPalindromes);
        //return totalPalindromes;        
    }
    
    
}
